{"version":3,"sources":["src/assets/logo-transparent.png","src/serviceWorkerRegistration.js","AppContext.tsx","src/constants/urls.js","src/helpers/base64.js","src/helpers/apiHandler.js","src/constants/colors.js","src/constants/utils.js","src/screens/Login/LoginScreen.web.tsx","src/screens/Home/HomeScreen.web.tsx","src/screens/SplashScreen.tsx","src/components/Alert.tsx","App.tsx","src/assets/logo1.jpg"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","AuthContext","React","createContext","signOut","signIn","userToken","API_URL","API_URL_1","chars","Base64","btoa","charCode","input","str","output","block","i","map","charAt","charCodeAt","Error","atob","replace","length","buffer","bc","bs","String","fromCharCode","indexOf","getHeader","usr","form","header","user","JSON","parse","AsyncStorage","getItem","Authorization","username","password","e","Accept","apiHandler","requestType","url","url1","data","undefined","params","onUploadProgress","headers","baseURL","method","transformRequest","dt","hd","axios","colors","formatDate","date","d","getDate","m","getMonth","getFullYear","timer","HomeScreen","useState","companiesList","setCompaniesList","showCompanyDropDown","setCompanyDropDown","selectedCompany","setSelectedCompany","selectedCompanyId","setSelectedCompanyId","locationList","setLocationList","showLocationsDropDown","setLocationsDropDown","selectedLocation","setSelectedLocation","seValueEntries","totalTransaction","setTotalTransaction","totalSalesQty","setTotalSalesQty","totalSalesPrice","setTotalSalesPrice","Date","setDate","selectedPeriod","setSelectedPeriod","loading","setLoading","useEffect","getValueEntries","response","value","allTransactionsWithoutSalesCreditMemo","filter","x","documentType","Set","entry","documentNo","size","reduce","p","v","invoicedQty","salesAmountActual","toFixed","err","getLocations","label","Name","Code","id","name","displayName","businessProfileId","getCompanies","comp","find","c","View","Helmet","charSet","content","style","styles","filtersContainer","zIndex","zIndexInverse","dropDown","placeholder","placeholderStyle","color","open","onOpen","items","setOpen","setValue","TouchableOpacity","flexDirection","justifyContent","padding","marginLeft","Text","fontSize","marginBottom","selected","onChange","ActivityIndicator","contentContainer","Card","marginTop","Title","title","Content","Paragraph","textAlign","StyleSheet","create","filterStyle","flex","margin","borderColor","LoginScreen","setUsername","setPassword","showPassword","setShowPassword","errorMessage","setErrorMessage","logginIn","setLogginIn","useContext","clearTimeout","ImageBackground","source","require","blurRadius","container","center","Image","height","width","alignItems","TextInput","loginInput","mode","onChangeText","text","secureTextEntry","right","Icon","onPress","setTimeout","signInButtonContainer","signInText","backgroundColor","borderRadius","SplashScreen","alert","Platform","OS","description","options","extra","confirm","join","confirmOption","cancelOption","Alert","Stack","createStackNavigator","theme","DefaultTheme","roundness","primary","accent","background","App","prevState","action","type","token","isLoading","isSignout","dispatch","bootstrapAsync","authContext","setItem","stringify","removeItem","Provider","NavigationContainer","documentTitle","formatter","route","Navigator","Screen","component","animationTypeForReplace","headerTintColor","headerLeft","headerRight","icon","URL","process","href","origin","addEventListener","fetch","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/app.f921a491.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-transparent.2167c3eb.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\ntype InitialStateType = {\n  signOut: () => void;\n  signIn: (data: any) => void;\n  userToken: string;\n};\nconst AuthContext = React.createContext<InitialStateType>({\n  signOut: () => {},\n  signIn: () => {},\n  userToken: '',\n});\n\nexport default AuthContext;\n","// bc170\n// export const API_URL =\n//   \"https://bc.lifestyleapparels.com.np/BC170/api/datahub/bz/v2.0\";\n// export const API_URL_1 = \"https://bc.lifestyleapparels.com.np/BC170/ODataV4/\";\n\n// https://182.93.84.51:9559/BC170test/Odatav4/Company\nexport const API_URL = \"https://182.93.84.51:9048/bc170/api/datahub/bz/v2.0\";\nexport const API_URL_1 =\n  \"https://bc.lifestyleapparels.com.np:9559/BC170test/Odatav4\";\n// export const API_URL = \"http://182.93.84.51:9048/bc170/api/datahub/bz/v2.0\";\n// export const API_URL_1 = \"http://182.93.84.51:9048/BC170/ODataV4/\";\n// // //live\n// export const API_URL = \"http://182.93.84.51:9248/lsa2/api/datahub/bz/v2.0\";\n// export const API_URL_1 = \"http://182.93.84.51:9248/lsa2/ODataV4/\";\n","// @flow\n// Inspired by: https://github.com/davidchambers/Base64.js/blob/master/base64.js\n\nconst chars =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst Base64 = {\n  btoa: (input: string = '') => {\n    let str = input;\n    let output = '';\n\n    for (\n      let block = 0, charCode, i = 0, map = chars;\n      str.charAt(i | 0) || ((map = '='), i % 1);\n      output += map.charAt(63 & (block >> (8 - (i % 1) * 8)))\n    ) {\n      charCode = str.charCodeAt((i += 3 / 4));\n\n      if (charCode > 0xff) {\n        throw new Error(\n          \"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\",\n        );\n      }\n\n      block = (block << 8) | charCode;\n    }\n\n    return output;\n  },\n\n  atob: (input: string = '') => {\n    let str = input.replace(/[=]+$/, '');\n    let output = '';\n\n    if (str.length % 4 == 1) {\n      throw new Error(\n        \"'atob' failed: The string to be decoded is not correctly encoded.\",\n      );\n    }\n    for (\n      let bc = 0, bs = 0, buffer, i = 0;\n      (buffer = str.charAt(i++));\n      ~buffer && ((bs = bc % 4 ? bs * 64 + buffer : buffer), bc++ % 4)\n        ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n        : 0\n    ) {\n      buffer = chars.indexOf(buffer);\n    }\n\n    return output;\n  },\n};\n\nexport default Base64;\n","import {API_URL, API_URL_1} from '../constants/urls';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Base64 from '../helpers/base64';\nimport axios from 'axios';\n\nexport const getHeader = async (usr, form) => {\n  let header = {};\n  try {\n    let user;\n    if (usr) {\n      user = usr;\n    } else {\n      user = JSON.parse(await AsyncStorage.getItem('userToken'));\n    }\n    if (user) {\n      header = {\n        Authorization:\n          'Basic ' + Base64.btoa(`${user?.username}:${user?.password}`),\n      };\n    }\n  } catch (e) {\n    // Restoring token failed\n  }\n\n  console.log(header);\n\n  if (!form) {\n    header = {\n      ...header,\n      'Content-Type': 'application/json',\n    };\n  } else {\n    header = {\n      ...header,\n      'Content-Type': 'multipart/form-data',\n      Accept: 'multipart/form-data',\n    };\n  }\n\n  return header;\n};\n\n/**\n * Create Axios Request handler\n * @param requestType\n * @param url\n * @param {object | null} user\n * @param url1\n * @param {object} data\n * @param params\n * @param user\n */\nconst apiHandler = async (\n  requestType,\n  url,\n  user = null,\n  url1 = false,\n  data = undefined,\n  params = undefined,\n  onUploadProgress = undefined,\n) => {\n  const headers = await getHeader(user);\n  let config = {\n    baseURL: url1 ? API_URL_1 : API_URL,\n    url,\n    method: requestType,\n    headers,\n    data,\n    params,\n    onUploadProgress,\n    transformRequest: [\n      function (dt, hd) {\n        // Do whatever you want to transform the data\n\n        return data;\n      },\n    ],\n  };\n  if (!data) {\n    delete config.data;\n  }\n  if (!params) {\n    delete config.params;\n  }\n  if (!onUploadProgress) {\n    delete config.onUploadProgress;\n  }\n  return axios(config);\n};\n\nexport default apiHandler;\n","export const colors = {\n  white: '#ffffff',\n  black: '#000000',\n  primary: '#22B516',\n  secondary: '#FF6B37',\n  quaternary: '#3f51b5',\n  gray: '#9e9e9e',\n  gray1: '#fafafa',\n  gray2: '#f5f5f5',\n  gray3: '#eeeeee',\n  gray4: '#e0e0e0',\n  teal: '#009688',\n  red: '#f44336',\n  green: '#4caf50',\n};\n","export function formatDate(date: Date) {\n  var d = date.getDate();\n  var m = date.getMonth() + 1; //Month from 0 to 11\n  var y = date.getFullYear();\n  return '' + y + '-' + (m <= 9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);\n}\n","import {\n  ActivityIndicator,\n  Image,\n  ImageBackground,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport React, { useEffect } from 'react';\n\nimport AuthContext from '../../../AppContext';\nimport { Helmet } from 'react-helmet'\nimport { TextInput } from 'react-native-paper';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport apiHandler from '../../helpers/apiHandler';\nimport { colors } from '../../constants/colors';\n\nlet timer: ReturnType<typeof setTimeout>;\n\nfunction LoginScreen() {\n  const [username, setUsername] = React.useState(''); //APPUSER\n  const [password, setPassword] = React.useState(''); //Lsa@2021\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const [logginIn, setLogginIn] = React.useState(false);\n\n  const { signIn } = React.useContext(AuthContext);\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n  return (\n    <ImageBackground\n      source={require('../../assets/logo1.jpg')}\n      blurRadius={30}\n      style={styles.container}>\n      <Helmet>\n        <meta charSet=\"utf-8\" name=\"title\" content={'LSA'} />\n        <title>LSA app</title>\n      </Helmet>\n      <View style={styles.center}>\n        <Image\n          source={require('../../assets/logo-transparent.png')}\n          style={{ height: 180, width: 180 }}\n        />\n      </View>\n      <View style={{ marginTop: 20, alignItems: 'center' }}>\n        <TextInput\n          style={styles.loginInput}\n          mode=\"flat\"\n          label=\"Username\"\n          value={username}\n          onChangeText={text => setUsername(text)}\n        />\n        <TextInput\n          style={styles.loginInput}\n          mode=\"flat\"\n          label=\"Password\"\n          value={password}\n          onChangeText={text => setPassword(text)}\n          secureTextEntry={!showPassword}\n          right={\n            <TextInput.Icon\n              name=\"eye\"\n              onPress={() => setShowPassword(!showPassword)}\n            />\n          }\n        />\n      </View>\n      <View style={styles.center}>\n        <Text style={{ marginTop: 10, color: colors.red }}>{errorMessage}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            setErrorMessage('');\n            setLogginIn(true);\n\n            timer = setTimeout(() => {\n              apiHandler('get', '/Company', { username, password }, true)\n                .then(() => {\n                  setLogginIn(false);\n                  signIn({ username, password });\n                })\n                .catch(() => {\n                  setErrorMessage('Invalid username or password');\n                  setLogginIn(false);\n                });\n            }, 200);\n          }}\n          style={styles.signInButtonContainer}>\n          {logginIn ? (\n            <View style={styles.signInText}>\n              <ActivityIndicator color={colors.white} />\n            </View>\n          ) : (\n            <Text style={styles.signInText}>Sign In</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n    </ImageBackground>\n  );\n}\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: colors.white,\n    padding: 10,\n  },\n  center: { justifyContent: 'center', alignItems: 'center' },\n  loginInput: {\n    marginTop: 5,\n    padding: 5,\n    width: 300,\n    height: 50,\n    borderRadius: 10,\n    backgroundColor: colors.white,\n  },\n  signInButtonContainer: {\n    backgroundColor: colors.secondary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    borderRadius: 4,\n    width: 300,\n  },\n  signInText: { color: 'white', padding: 10, fontSize: 18 },\n});\n","import \"react-datepicker/dist/react-datepicker.css\";\n\nimport {\n  ActivityIndicator,\n  Card,\n  Paragraph,\n  TextInput,\n} from 'react-native-paper';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\n// import DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport DatePicker from \"react-datepicker\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport { Helmet } from \"react-helmet\";\nimport MaterialIcon from 'react-native-vector-icons/MaterialIcons';\nimport apiHandler from '../../helpers/apiHandler';\nimport { colors } from '../../constants/colors';\nimport { formatDate } from '../../constants/utils';\n\n// const today = formatDate(new Date());\n// const yesterday = formatDate(new Date(Date.now() - 86400000));\n// const todayBeforeYesterday = formatDate(new Date(Date.now() - 2 * 86400000));\nconst HomeScreen = () => {\n  const [companiesList, setCompaniesList] = useState([]);\n  const [showCompanyDropDown, setCompanyDropDown] = useState(false);\n  const [selectedCompany, setSelectedCompany] = useState<string | null>(null);\n  const [selectedCompanyId, setSelectedCompanyId] = useState<string>('');\n\n  const [locationList, setLocationList] = useState([]);\n  const [showLocationsDropDown, setLocationsDropDown] = useState(false);\n  const [selectedLocation, setSelectedLocation] = useState<string>('');\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [valueEntries, seValueEntries] = useState([]);\n  const [totalTransaction, setTotalTransaction] = useState<number | null>(null);\n  const [totalSalesQty, setTotalSalesQty] = useState<number | null>(null);\n  const [totalSalesPrice, setTotalSalesPrice] = useState<number | null>(null);\n\n  const [date, setDate] = useState<Date>(new Date());\n  const [open, setOpen] = useState(false);\n\n  // const [periodList] = useState([\n  //   {label: 'Today', value: today},\n  //   {label: 'Yesterday', value: yesterday},\n  //   {label: 'Day before yesterday', value: todayBeforeYesterday},\n  // ]);\n  // const [showPeriodsDropDown, setPeriodsDropDown] = useState(false);\n  const [selectedPeriod, setSelectedPeriod] = useState<string>('');\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getValueEntries = async () => {\n      setLoading(true);\n      apiHandler(\n        'get',\n        `/companies(${selectedCompanyId})/ValueEntries?$filter=locationCode eq '${selectedLocation}' and postingDate eq ${selectedPeriod}`,\n        null,\n        false,\n      )\n        .then(response => {\n          setLoading(false);\n\n          console.log(response);\n          if (response.data.value) {\n            seValueEntries(response.data.value);\n            const allTransactions = response.data.value;\n            const allTransactionsWithoutSalesCreditMemo =\n              allTransactions.filter(\n                (x: any) => x.documentType === 'Sales Invoice',\n              );\n            setTotalTransaction(\n              new Set(\n                allTransactionsWithoutSalesCreditMemo.map(\n                  (entry: any) => entry.documentNo,\n                ),\n              ).size,\n            );\n            setTotalSalesQty(\n              response.data.value.reduce((p: any, v: any) => {\n                return p + v.invoicedQty * -1;\n              }, 0),\n            );\n            setTotalSalesPrice(\n              response.data.value\n                .reduce((p: any, v: any) => {\n                  return p + v.salesAmountActual;\n                }, 0)\n                .toFixed(2),\n            );\n          } else {\n            seValueEntries([]);\n            setTotalTransaction(0);\n            setTotalSalesQty(0);\n            setTotalSalesPrice(0);\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          setLoading(false);\n        });\n    };\n    if (selectedCompanyId && selectedLocation && selectedPeriod) {\n      getValueEntries();\n    }\n    console.log('object', selectedCompanyId, selectedLocation, selectedPeriod);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCompanyId, selectedLocation, selectedPeriod]);\n\n  useEffect(() => {\n    const getLocations = async () => {\n      setLoading(true);\n      apiHandler(\n        'get',\n        `/Company('${selectedCompany}')/locationList?$filter=Use_As_In_Transit eq false`,\n        null,\n        true,\n      )\n        .then(response => {\n          setLoading(false);\n\n          console.log(response);\n          setLocationList(\n            response.data.value.map(\n              ({ Name, Code }: { Name: string; Code: string }) => {\n                return { label: Name, value: Code };\n              },\n            ),\n          );\n        })\n        .catch(err => {\n          console.log(err);\n          setLoading(false);\n        });\n    };\n    if (selectedCompany) {\n      getLocations();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCompany]);\n\n  useEffect(() => {\n    if (selectedCompanyId && selectedLocation) {\n      if (!selectedPeriod) {\n        setSelectedPeriod(formatDate(new Date()));\n      }\n    }\n    console.log(selectedCompanyId, selectedLocation);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCompanyId, selectedLocation]);\n\n  useEffect(() => {\n    const getCompanies = async () => {\n      setLoading(true);\n      apiHandler('get', '/companies', null, false)\n        .then(response => {\n          setLoading(false);\n          console.log(response);\n          setCompaniesList(\n            response.data.value.map(\n              ({\n                id,\n                name,\n                displayName,\n                businessProfileId,\n              }: {\n                id: string;\n                name: string;\n                displayName: string;\n                businessProfileId: string;\n              }) => {\n                return { id, businessProfileId, label: displayName, value: name };\n              },\n            ),\n          );\n        })\n        .catch(err => {\n          console.log(err);\n          setLoading(false);\n        });\n    };\n    getCompanies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const comp = companiesList.find(\n      (c: any) => c.value === selectedCompany,\n    ) || {\n      id: '',\n    };\n    console.log(comp, 'company', companiesList, selectedCompany);\n    setSelectedCompanyId(comp?.id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCompany]);\n\n  useEffect(() => {\n    setSelectedPeriod(formatDate(date));\n  }, [date]);\n\n  return (\n    <View>\n      <Helmet>\n        <meta charSet=\"utf-8\" name=\"title\" content={'LSA'} />\n        <title>LSA app</title>\n      </Helmet>\n      <View style={styles.filtersContainer}>\n        <DropDownPicker\n          zIndex={3000}\n          zIndexInverse={1000}\n          style={styles.dropDown}\n          placeholder=\"Select Company\"\n          placeholderStyle={{ color: colors.gray }}\n          open={showCompanyDropDown}\n          onOpen={() => setLocationsDropDown(false)}\n          value={selectedCompany}\n          items={companiesList}\n          setOpen={setCompanyDropDown}\n          setValue={setSelectedCompany}\n        />\n\n        <DropDownPicker\n          zIndex={2000}\n          zIndexInverse={2000}\n          style={styles.dropDown}\n          placeholder=\"Select Location\"\n          placeholderStyle={{ color: colors.gray }}\n          onOpen={() => setCompanyDropDown(false)}\n          open={showLocationsDropDown}\n          value={selectedLocation}\n          items={locationList}\n          setOpen={setLocationsDropDown}\n          setValue={setSelectedLocation}\n        />\n        { }\n        <TouchableOpacity\n          // onPress={() => setOpen(true)}\n          style={{ flexDirection: 'row', justifyContent: 'space-between', padding: 5 }}>\n          <View style={{ marginLeft: 10 }}>\n            <Text style={{ fontSize: 12, marginBottom: 5, color: colors.gray }}>\n              Select Date\n            </Text>\n            {/* <Text style={{ fontSize: 16 }}>{selectedPeriod}</Text> */}\n          </View>\n          <View style={{}}>\n            <DatePicker selected={date} onChange={(dt: Date) => {\n              console.log(dt);\n              // setOpen(false);\n              setDate(dt);\n            }} />\n          </View>\n        </TouchableOpacity>\n\n\n\n        {/* <DateTimePickerModal\n          isVisible={open}\n          mode=\"date\"\n          date={date}\n          onConfirm={dt => {\n            setOpen(false);\n            setDate(dt);\n          }}\n          onCancel={() => {\n            setOpen(false);\n          }}\n        /> */}\n        {/* <DatePicker\n          modal\n          maximumDate={new Date()}\n          mode=\"date\"\n          open={open}\n          date={date}\n          onConfirm={dt => {\n            setOpen(false);\n            setDate(dt);\n          }}\n          onCancel={() => {\n            setOpen(false);\n          }}\n        /> */}\n      </View>\n      {loading ? <ActivityIndicator color={colors.primary} /> : null}\n      {!(totalSalesQty && totalSalesPrice && totalTransaction) ? (\n        <Text style={{ textAlign: 'center', marginTop: 50, color: colors.gray }}>\n          No data found\n        </Text>\n      ) : (\n        <View style={styles.contentContainer}>\n          {/* {totalSalesQty ? ( */}\n          <Card style={{ marginTop: 8 }}>\n            <Card.Title title=\"Sales Qty\" />\n            <Card.Content>\n              <Paragraph>{totalSalesQty}</Paragraph>\n            </Card.Content>\n          </Card>\n          {/* ) : null} */}\n          {/* {totalSalesPrice ? ( */}\n          <Card style={{ marginTop: 8 }}>\n            <Card.Title title=\"Sales Value\" />\n            <Card.Content>\n              <Paragraph>NPR. {totalSalesPrice}</Paragraph>\n            </Card.Content>\n          </Card>\n          {/* ) : null} */}\n          {/* {totalTransaction ? ( */}\n          <Card style={{ marginTop: 8 }}>\n            <Card.Title title=\"Total Transactions\" />\n            <Card.Content>\n              <Paragraph> {totalTransaction}</Paragraph>\n            </Card.Content>\n          </Card>\n          {/* ) : null} */}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  filtersContainer: {\n    padding: 15,\n    zIndex: 1000,\n  },\n  filterStyle: {\n    flex: 1,\n    margin: 5,\n  },\n  dropDown: {\n    marginBottom: 10,\n    zIndex: 2,\n    borderColor: colors.gray,\n  },\n  contentContainer: {\n    marginTop: 30,\n    justifyContent: 'center',\n    padding: 10,\n    zIndex: 2,\n  },\n});\n","import React from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\n\nfunction SplashScreen() {\n  return (\n    <View style={styles.container}>\n      <Text>Loading...</Text>\n    </View>\n  );\n}\n\nexport default SplashScreen;\n\nconst styles = StyleSheet.create({\n  container: {flex: 1},\n});\n","import { Alert, Platform } from 'react-native'\n\nconst alertPolyfill = (title: string, description: string, options: any, extra?: any) => {\n    const result = window.confirm([title, description].filter(Boolean).join('\\n'))\n\n    if (result) {\n        const confirmOption = options.find(({ style }: any) => style !== 'cancel')\n        confirmOption && confirmOption.onPress()\n    } else {\n        const cancelOption = options.find(({ style }: any) => style === 'cancel')\n        cancelOption && cancelOption.onPress()\n    }\n}\n\nconst alert = Platform.OS === 'web' ? alertPolyfill : Alert.alert\n\nexport default alert","import * as React from 'react';\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\n\nimport {\n  Avatar,\n  DefaultTheme,\n  Provider as PaperProvider,\n} from 'react-native-paper';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AuthContext from './AppContext';\nimport HomeScreen from './src/screens/Home/HomeScreen';\nimport { Image } from 'react-native';\nimport LoginScreen from './src/screens/Login/LoginScreen';\nimport { NavigationContainer } from '@react-navigation/native';\nimport SplashScreen from './src/screens/SplashScreen';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport alert from './src/components/Alert';\nimport { colors } from './src/constants/colors';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: colors.primary,\n    accent: colors.secondary,\n    background: colors.white,\n  },\n};\n\ninterface IActionA {\n  type: string;\n  token?: string | null;\n}\nexport default function App() {\n  const [state, dispatch] = React.useReducer(\n    (prevState: any, action: IActionA) => {\n      switch (action.type) {\n        case 'RESTORE_TOKEN':\n          return {\n            ...prevState,\n            userToken: action.token,\n            isLoading: false,\n          };\n        case 'SIGN_IN':\n          return {\n            ...prevState,\n            isSignout: false,\n            userToken: action.token,\n          };\n        case 'SIGN_OUT':\n          return {\n            ...prevState,\n            isSignout: true,\n            userToken: null,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignout: false,\n      userToken: null,\n    },\n  );\n\n  React.useEffect(() => {\n    // Fetch the token from storage then navigate to our appropriate place\n    const bootstrapAsync = async () => {\n      let userToken;\n      try {\n        // Restore token stored in `SecureStore` or any other encrypted storage\n        userToken = await AsyncStorage.getItem('userToken');\n      } catch (e) {\n        // Restoring token failed\n      }\n\n      // After restoring token, we may need to validate it in production apps\n\n      // This will switch to the App screen or Auth screen and this loading\n      // screen will be unmounted and thrown away.\n      dispatch({ type: 'RESTORE_TOKEN', token: userToken });\n    };\n\n    bootstrapAsync();\n  }, []);\n\n  const authContext = React.useMemo(\n    () => ({\n      signIn: async (data: any) => {\n        // In a production app, we need to send some data (usually username, password) to server and get a token\n        // We will also need to handle errors if sign in failed\n        // After getting token, we need to persist the token using `SecureStore` or any other encrypted storage\n        // In the example, we'll use a dummy token\n        await AsyncStorage.setItem('userToken', JSON.stringify(data));\n        dispatch({ type: 'SIGN_IN', token: JSON.stringify(data) });\n      },\n      signOut: async () => {\n        console.log('testsss')\n        await AsyncStorage.removeItem('userToken');\n        dispatch({ type: 'SIGN_OUT' });\n      },\n      userToken: state.userToken,\n    }),\n    [state],\n  );\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <PaperProvider theme={theme}>\n        <NavigationContainer documentTitle={{\n          formatter: (options, route) =>\n            `${options?.title ?? route?.name} - LSA`,\n        }}>\n          <Stack.Navigator>\n            {state.isLoading ? (\n              // We haven't finished checking for the token yet\n              <Stack.Screen\n                name=\"Splash\"\n                component={SplashScreen}\n                options={{\n                  header: () => null,\n                }}\n              />\n            ) : state.userToken == null ? (\n              // No token found, user isn't signed in\n              <Stack.Screen\n                name=\"SignIn\"\n                component={LoginScreen}\n                options={{\n                  header: () => null,\n                  // title: 'Sign in',\n                  // When logging out, a pop animation feels intuitive\n                  animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n                }}\n              />\n            ) : (\n              // User is signed in\n              <Stack.Screen\n                name=\"Home\"\n                component={HomeScreen}\n                options={{\n                  // headerTitle: () => (\n                  //   <Image\n                  //     source={require('./src/assets/logo-transparent.png')}\n                  //     style={{width: 30, height: 30}}\n                  //   />\n                  // ),\n                  headerTintColor: colors.secondary,\n                  headerLeft: () => (\n                    // <Avatar.Icon\n                    //   size={30}\n                    //   icon=\"account-circle\"\n                    //   color={colors.secondary}\n                    //   style={{marginLeft: 10}}\n                    // />\n                    <Image\n                      source={require('./src/assets/logo-transparent.png')}\n                      style={{ width: 40, height: 40, margin: 5 }}\n                    />\n                  ),\n                  headerRight: () => (\n                    <TouchableOpacity\n                      onPress={() => {\n                        alert(\n                          'Logout',\n                          'Are you sure you want to logout?',\n                          [\n                            {\n                              text: 'Cancel',\n                              onPress: () => console.log('Cancel Pressed'),\n                              style: 'cancel',\n                            },\n                            {\n                              text: 'OK',\n                              onPress: () => { console.log('first'); authContext.signOut() },\n                            },\n                          ],\n                        );\n                      }}>\n                      <Avatar.Icon\n                        size={30}\n                        icon=\"logout\"\n                        style={{ marginLeft: 10, margin: 10 }}\n                      />\n                    </TouchableOpacity>\n                  ),\n                }}\n              />\n            )}\n          </Stack.Navigator>\n        </NavigationContainer>\n      </PaperProvider>\n    </AuthContext.Provider>\n  );\n}\n\n\nserviceWorkerRegistration.register();","module.exports = __webpack_public_path__ + \"static/media/logo1.f31eaf93.jpg\";"],"sourceRoot":""}